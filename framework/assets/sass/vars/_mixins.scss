/* =============================
	   Structure Mixins
=============================== */

//Center any element
@mixin center{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

//vertically center any element (Check browser compatability)
@mixin vert-center {
    display: flex;
    align-items: center;
    justify-content: center;
}


/* =============================
	   Utility Mixins
=============================== */

//Mixin that forces transition to be rendered via the on-board graphics processor of the device
@mixin smooth-move($x:0,$y:0,$z:0) {
	-webkit-transform:translate3d($x,$y,$z);
	-moz-transform:translate3d($x,$y,$z);
	-ms-transform:translate3d($x,$y,$z);
	transform:translate3d($x,$y,$z);
}

//Opacity Mixin with old IE fallback
@mixin opacity($opacity) {
	opacity: $opacity;
	filter: alpha(opacity=($opacity * 100));
}


/* =============================
	RESPONSIVE MIXINS
=============================== */

 	/*------------------------------
	* Responsive Breakpoints | VARS
	*------------------------------*/

	$s-phone:	 	320px;
	$m-phone:	 	480px;
	$l-phone:		600px;
	$xl-phone: 	    767px;
	$ver-tablet: 	768px;
	$m-tablet: 	    880px;
	$l-tablet: 	    980px;
	$hor-tablet: 	1024px;
	$m-desktop:	  	1200px;
	$l-laptop:	    1280px;
	$m-desktop:  	1366px;
	$l-desktop: 	1440px;

/*------------------------------
* Responsive Max-Width | Mixin
*------------------------------*/
//Use the VARS for the desired breakpoint

@mixin respond-max($breakpoint-max) {
	@media only screen and (max-width: $breakpoint-max ) { @content; }
}

/*------------------------------
* Responsive Max-Width | Mixin
*------------------------------*/
//Use the VARS for the desired breakpoint

@mixin respond-min($breakpoint-min) {
	@media only screen and (min-width: $breakpoint-min ) { @content; }
}


//If you use the custom query, PLEASE Specify what it is for!!
@mixin respond-custom( $type,$value,$type2:null,$value2:null) {
	@if $type2 != null{
		@media only screen and ($type: em($value)) and ($type2: em($value2)) { @content; }
	} @else {
		@media only screen and ($type: em($value)) { @content; }
	}

}